plugins {
    id 'java'
	id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.7'
}

group 'cs.oop'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

javafx {
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.swing']
}

dependencies {
    compile 'org.seleniumhq.selenium:selenium-java:3.141.0'
    compile group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '2.2.4'
	compile group: 'com.codeborne', name: 'selenide', version: '5.10.0'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
    compile group: 'org.slf4j', name: 'slf4j-nop', version: '1.7.30'
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': project.name,
                'Implementation-Version': version,
                'Main-Class': 'Main',
                'Class-Path': '.'
    }
    baseName = project.name
    archiveName = project.name + '.jar'
    from sourceSets.test.output
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar

}

task copyJar(type: Copy) {
    from fatJar
    into 'build/fatJar'
}

task runFinalJar(type: Exec) {
    commandLine  'cmd','/c','start', 'cmd.exe' ,'@cmd' , '/k', 'java -Dconsole.encoding=UTF-8 -Dfile.encoding=utf-8 -jar build/fatJar' + '/' + project.name + '.jar'
}

task buildApp (dependsOn: [fatJar, copyJar])
task buildAppAndRun (dependsOn: [fatJar, copyJar, runFinalJar])